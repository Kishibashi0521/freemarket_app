/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2022-06-24 02:24:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import bean.*;
import dao.*;
import bean.User;

public final class menu_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/common/userinfo.jsp", Long.valueOf(1655969283287L));
    _jspx_dependants.put("/common/header.jsp", Long.valueOf(1655969319579L));
    _jspx_dependants.put("/common/footer.jsp", Long.valueOf(1656037312551L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("dao");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("bean");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bean.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 高瀬作成 -->\r\n");
      out.write("<HTML>\r\n");
      out.write("<HEAD>\r\n");
      out.write("<TITLE>Menu</TITLE>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"");
      out.print(request.getContextPath());
      out.write("/css/style.css\">\r\n");
      out.write("</HEAD>\r\n");
      out.write("\r\n");
      out.write("<BODY>\r\n");
      out.write("\t<!-- ヘッダの読込 -->\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<title>ヘッダー</title>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<h1 align=\"center\"><img src =https://1.bp.blogspot.com/-eYbEtYcQHL8/XnLn6Fy-tOI/AAAAAAABX0c/O5NnoOqVissoS0-i0PCu3ZANBSHYFzrSACNcBGAsYHQ/s1600/character_social_robot.png width=\"100\" height=\"100\">らくはんくん<img src =https://1.bp.blogspot.com/-eYbEtYcQHL8/XnLn6Fy-tOI/AAAAAAABX0c/O5NnoOqVissoS0-i0PCu3ZANBSHYFzrSACNcBGAsYHQ/s1600/character_social_robot.png width=\"100\" height=\"100\"></h1>\r\n");
      out.write("\t\t<hr align=\"center\" size=\"5\" color=\"blue\" width=\"950\"></hr>\r\n");
      out.write("\t</body>\r\n");
      out.write("\t</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- ログイン者情報の表示 -->\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"");
      out.print(request.getContextPath());
      out.write("/css/style.css\">\r\n");
      out.write("<html>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		session = request.getSession();
		User user = (User) session.getAttribute("user");
		//セッション切れか確認
	    if (user == null) {
	        //セッション切れならerror.jspへフォワード
	        request.setAttribute("error", "セッション切れの為、メニュー表示できませんでした。");
	        request.setAttribute("cmd", "logout");
	        request.getRequestDispatcher("/view/login.jsp").forward(request, response);
	        return;
	    }
	
      out.write("\r\n");
      out.write("\t<table class=\"userTable\" summary=\"ユーザー情報\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>名前：");
      out.print(user.getUserid());
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

			if (user.getAuthority().equals("1")) {
		
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>権限：一般ユーザー</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

			} else {
		
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>権限：管理者</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

			}
		
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\r\n");
      out.write("\t<hr size=\"2\" color=\"black\" width=\"950\">\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");

		//管理者か一般ユーザかでメニューを切り替える
		User users = (User) session.getAttribute("user");

		if (users.getAuthority().equals("0")) {
			//権限が「0」なら管理者
	
      out.write("\r\n");
      out.write("\t<P align=\"center\">\r\n");
      out.write("\t\t<FONT size=\"5\">管理者MENU</FONT>\r\n");
      out.write("\t</P>\r\n");
      out.write("\t<HR align=\"center\" size=\"3\" color=\"BLACK\" width=\"950\"></HR>\r\n");
      out.write("\r\n");
      out.write("\t<TABLE>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD><A href=\"");
      out.print(request.getContextPath());
      out.write("/userList\">【ユーザー一覧表示】</A></TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD>&nbsp;</TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD><A href=\"");
      out.print(request.getContextPath());
      out.write("/showCart\">【商品一覧】</A></TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD>&nbsp;</TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD><A href=\"");
      out.print(request.getContextPath());
      out.write("/salesConfirm\">【売上確認】</A></TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD>&nbsp;</TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD>&nbsp;</TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD><A href=\"");
      out.print(request.getContextPath());
      out.write("/logout\">【ログアウト】</A></TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\t</TABLE>\r\n");
      out.write("\t");

		} else {
			//権限が「1」ならユーザー
	
      out.write("\r\n");
      out.write("\t<P align=\"center\">\r\n");
      out.write("\t\t<FONT size=\"5\">ユーザーMENU</FONT>\r\n");
      out.write("\t</P>\r\n");
      out.write("\t<HR align=\"center\" size=\"3\" color=\"BLACK\" width=\"950\"></HR>\r\n");
      out.write("\t<TABLE>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD><A href=\"");
      out.print(request.getContextPath());
      out.write("/itemList\">【商品一覧】</A></TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD>&nbsp;</TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD><A href=\"");
      out.print(request.getContextPath());
      out.write("/view/insertItem.jsp\">【出品】</A></TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD>&nbsp;</TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD><A href=\"");
      out.print(request.getContextPath());
      out.write("/boughtItemList\">【購入済商品一覧】</A></TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD>&nbsp;</TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD><A href=\"");
      out.print(request.getContextPath());
      out.write("/userDetail\">【ユーザー情報詳細(自身)】</A></TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD>&nbsp;</TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD>&nbsp;</TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD>&nbsp;</TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD><A href=\"");
      out.print(request.getContextPath());
      out.write("/logout\">【ログアウト】</A></TD>\r\n");
      out.write("\t\t</TR>\r\n");
      out.write("\t</TABLE>\r\n");
      out.write("\t");

		}
	
      out.write("\r\n");
      out.write("\t<!-- フッタの読込 -->\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<title>ヘッダー</title>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t\t<br><br><br><br><br><br><br><br><br><br>\r\n");
      out.write("\t\t<hr align=\"center\" size=\"5\" color=\"blue\" width=\"950\">\r\n");
      out.write("\t\t<table border=0  width=\"950\" summary=\"フッター表示\">\r\n");
      out.write("\t\t\t<tr><td>copyright (c) 2022 all rights reserved.</td></tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</body>\r\n");
      out.write("\t</html>");
      out.write("\r\n");
      out.write("</BODY>\r\n");
      out.write("\r\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
